{"version":3,"sources":["components/DisplayPictures.js","components/DisplayScore.js","components/Score.js","components/SelectPictures.js","App.js","index.js"],"names":["DisplayPictures","props","imageArray","pickImage","selectImage","reset","className","map","number","onClick","src","alt","uniqid","DisplayScore","currentScore","highScore","id","Score","useState","setHighScore","useEffect","SelectPictures","setPickImage","usedImages","setUsedImages","setCurrentScore","eliminateDuplicates","newImages","i","argumentNumber","Math","floor","random","push","uniqueImages","Set","uniqueImage","length","splice","event","newPicture","target","concat","bind","App","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0TAoCeA,EAhCS,SAACC,GAAW,IAGhCC,EAIED,EAJFC,WACAC,EAGEF,EAHFE,UACAC,EAEEH,EAFFG,YACAC,EACEJ,EADFI,MAGF,OACE,sBAAKC,UAAY,UAAjB,UACE,qBAAKA,UAAY,MAAjB,SACGH,EAAUI,KAAI,SAACC,GAAD,OACb,qBAAKF,UAAY,SAAjB,SACE,wBAASG,QAAWL,EAApB,SACE,qBAAKM,IAAOR,EAAWM,GAASG,IAAOT,EAAWM,QAFrBI,YAOrC,8BACE,wBACEN,UAAY,QACZG,QAAWJ,EAFb,4BCLOQ,G,KAjBM,SAACZ,GAAW,IAG7Ba,EAEEb,EAFFa,aACAC,EACEd,EADFc,UAGF,OACE,qBAAKT,UAAY,UAAjB,SACE,sBAAKA,UAAY,UAAUU,GAAK,WAAhC,UACE,oBAAGA,GAAK,gBAAR,oBAAgCF,KAChC,oBAAGE,GAAK,aAAR,yBAAkCD,YCc3BE,EAxBD,SAAChB,GAAW,IAGtBa,EACEb,EADFa,aAHqB,EAMWI,mBAAS,GANpB,mBAMhBH,EANgB,KAMLI,EANK,KAcvB,OANAC,qBAAU,WACJN,EAAeC,GACjBI,EAAaL,KAEd,CAACA,IAGF,8BACE,cAAC,EAAD,CACEA,aAAgBA,EAChBC,UAAaA,OCiGNM,EAnHQ,WAAM,MAIOH,mBAAS,IAJhB,mBAIpBf,EAJoB,KAITmB,EAJS,OAKSJ,mBAAS,IALlB,mBAKpBK,EALoB,KAKRC,EALQ,OAMaN,mBAAS,GANtB,mBAMpBJ,EANoB,KAMNW,EANM,KAyBrBvB,EAAa,CAfD,yBACF,uBACC,wBACD,uBACA,uBACO,8BACL,yBACH,sBACC,uBACG,0BACE,4BACD,2BACL,sBACK,2BACH,yBAwCjB,SAASwB,IACP,IAAIC,EAAY,GACsB,IAbxC,SAAqBA,GACnB,IAAI,IAAIC,EAAE,EAAGA,EAAI,EAAGA,IAAK,CACvB,IAAIC,EAAkBC,KAAKC,MAAsB,GAAhBD,KAAKE,UACtCL,EAAUM,KAAKJ,GACf,IAAIK,EAAY,YAAO,IAAIC,IAAIR,IAC/B,GAAU,IAANC,EAAU,OAAOM,GAQnBE,CAAYT,GAAWU,OACzBf,EAAaK,GAEbD,IAMJN,qBAAU,WACRE,GAAa,SAAAnB,GAAS,OAAIA,EAAUmC,OAAO,EAAG,MAC9CZ,MACA,CAACZ,IAsBH,OACE,gCACE,cAAC,EAAD,CACEA,aAAgBA,IAElB,cAAC,EAAD,CACEZ,WAAcA,EACdC,UAAaA,EACbC,YAnBW,SAACmC,GAChB,IAAMC,EAAaD,EAAME,OAAO/B,IAChCc,GAAc,SAAAD,GAAU,OAAIA,EAAWmB,OAAOH,EAAME,OAAO/B,QAC3D,IAAI,IAAIkB,EAAI,EAAGA,EAAIL,EAAWc,OAAO,EAAGT,IAClCY,IAAejB,EAAWK,KAVhCJ,EAAc,IACdC,GAAiB,IAajBA,GAAgB,SAAAX,GAAY,OAAKA,EAAe,MAWpB6B,K,WACxBtC,MAlEN,WACEiB,EAAa,IACbE,EAAc,IACdC,EAAgB,GAChBH,GAAa,SAAAnB,GAAS,OAAIA,EAAUmC,OAAO,EAAG,MAC9CZ,WCtCWkB,E,4JATb,WACE,OACE,qBAAKtC,UAAY,aAAjB,SACE,cAAC,EAAD,U,GAJUuC,aCClBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.fb35c04b.chunk.js","sourcesContent":["import React from 'react';\nimport '../styles/displayPictures.css';\nimport uniqid from 'uniqid';\n\nconst DisplayPictures = (props) => {\n\n  const { \n    imageArray,\n    pickImage,\n    selectImage,\n    reset,\n  } = props;\n\n  return (\n    <div className = 'content'>\n      <div className = 'row'>\n        {pickImage.map((number) => ( \n          <div className = 'column' key = {uniqid()}>\n            <button  onClick = {selectImage}>\n              <img src = {imageArray[number]} alt = {imageArray[number]}></img>\n            </button>\n          </div>\n        ))}\n      </div>\n      <div>\n        <button \n          className = 'reset'\n          onClick = {reset}\n        >\n          New Game\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default DisplayPictures;","import React from 'react';\nimport '../styles/displayScore.css';\n\nconst DisplayScore = (props) => {\n\n  const { \n    currentScore,\n    highScore,\n  } = props;\n\n  return (\n    <div className = 'content'>\n      <div className = 'nav-bar' id = 'scoreBar'>\n        <p id = 'current-score'>Score: {currentScore}</p>\n        <p id = 'high-score'>High Score: {highScore}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default DisplayScore;","import React, { useState, useEffect } from 'react';\nimport DisplayScore from './DisplayScore';\nimport '../styles/displayScore.css';\n\nconst Score = (props) => {\n\n  const { \n    currentScore,\n  } = props;\n\n  const [highScore, setHighScore] = useState(0);\n\n  useEffect(() => {\n    if (currentScore > highScore) {\n      setHighScore(currentScore);\n    } \n  }, [currentScore])\n\n  return (\n    <div>\n      <DisplayScore\n        currentScore = {currentScore}\n        highScore = {highScore}\n      />\n    </div>\n  )\n} \n\nexport default Score;","import React, { useState, useEffect } from 'react';\nimport DisplayPictures from './DisplayPictures';\nimport Score from './Score';\n\nconst SelectPictures = () => {\n\n  // sets states\n\n  const [pickImage, setPickImage] = useState([]);\n  const [usedImages, setUsedImages] = useState([]);\n  const [currentScore, setCurrentScore] = useState(0);\n\n  // populates array with images with which to select\n\n  const airplant = ('./images/airplant.jpeg');\n  const bamboo = ('./images/bamboo.jpeg');\n  const begonia = ('./images/begonia.jpeg');\n  const birkin = ('./images/birkin.jpeg');\n  const cactus = ('./images/cactus.jpeg');\n  const fiddleLeafFig = ('./images/fiddleleaffig.jpeg');\n  const monstera = ('./images/monstera.jpeg');\n  const pilea = ('./images/pilea.jpeg');\n  const pothos = ('./images/pothos.jpeg');\n  const anthurium = ('./images/anthurium.jpeg');\n  const rubberPlant = ('./images/rubberplant.jpeg');\n  const scindapsis = ('./images/scindapsis.jpeg');\n  const plant = ('./images/plant.jpeg');\n  const stromanthe = ('./images/stromanthe.jpeg');\n  const zzPlant = ('./images/zzplant.jpeg');\n  const imageArray = [\n    airplant,\n    bamboo,\n    begonia,\n    birkin,\n    cactus,\n    fiddleLeafFig,\n    monstera,\n    pilea,\n    pothos,\n    anthurium,\n    rubberPlant,\n    scindapsis,\n    plant,\n    stromanthe,\n    zzPlant,\n  ];\n\n  function reset() {\n    setPickImage([]);\n    setUsedImages([]);\n    setCurrentScore(0);\n    setPickImage(pickImage => pickImage.splice(0, 5));\n    eliminateDuplicates();\n  }\n\n  // generates an array of unique images\n\n  function uniqueImage(newImages) {\n    for(let i=0; i < 5; i++) {\n      let argumentNumber = (Math.floor(Math.random() * 15));\n      newImages.push(argumentNumber);\n      let uniqueImages = [...new Set(newImages)];\n      if (i === 4) {return uniqueImages};\n    }\n  }\n\n  // renders 5 unique image options\n\n  function eliminateDuplicates() {\n    let newImages = [];\n    if (uniqueImage(newImages).length === 5) {\n      setPickImage(newImages)\n    } else {\n      eliminateDuplicates();\n    };\n  }\n\n  // generates 5 random pictures\n\n  useEffect(() => {\n    setPickImage(pickImage => pickImage.splice(0, 5));\n    eliminateDuplicates();\n  },[currentScore])\n\n  // resets game after an incorrect selection\n\n  function tryAgain() {\n    setUsedImages([]);\n    setCurrentScore(-1);\n  }\n\n  // determines if image selected has previously been selected\n\n  const addImage = (event) => {\n    const newPicture = event.target.src;\n    setUsedImages(usedImages => usedImages.concat(event.target.src));\n    for(let i = 0; i < usedImages.length-1; i++) {\n      if (newPicture === usedImages[i]) {\n        tryAgain();\n      }\n    }\n    setCurrentScore(currentScore => (currentScore + 1));\n  }\n\n  return (\n    <div>\n      <Score\n        currentScore = {currentScore}\n      />\n      <DisplayPictures\n        imageArray = {imageArray}\n        pickImage = {pickImage}\n        selectImage = {addImage.bind(this)}\n        reset = {reset}\n      />\n    </div>\n  )\n} \n\nexport default SelectPictures;\n","import React, { Component } from 'react';\nimport './styles/App.css';\nimport SelectPictures from './components/SelectPictures';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className = \"play-board\">\n        <SelectPictures/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}